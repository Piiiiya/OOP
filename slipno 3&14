                                                            **SLIP 3 & 14**
Q1. Develop an object oriented program in C++ to create a database of student information system containing the following information: Name, Roll number, Class, division, Date of Birth, Blood group, Contact address, telephone number, driving license no. etc Construct the database with suitable member functions for initializing and destroying the data viz constructor, default constructor, Copy constructor, destructor, static member functions, friend class, this pointer 
#include<iostream.h> #include<string.h> class person_additional_info 
{ 
    char address[20],license[20],insurance[20]; 
    long int contact;   public:     person_additional_info() //Default constructor 
    {    
        strcpy(address,"XYZ");         strcpy(license,"XY-0000000000");         strcpy(insurance,"XY00000000X"); 
        contact=000000000; 
    } 
    ~person_additional_info() //Destructor 
    { 
        cout<<"I am in Destructor"; 
    } 
    friend class person;  
}; class person { 
    char name[20], dob[10], blood[10];     float ht,wt;     static int count; // Static variable     person_additional_info *pai;  public: 
    person()    {         strcpy(name,"XYZ");         strcpy(dob,"dd/mm/yy");         strcpy(blood,"A +"); 
        ht=0; 
        wt=0; 
        pai=new person_additional_info; 
    } 
    person(person*p1)  
    { 
        strcpy(name,p1->name);         strcpy(dob,p1->dob);         strcpy(blood,p1->blood);         ht=p1->ht;         wt=p1->wt;         pai=new person_additional_info;         strcpy(pai->address,p1->pai->address);         strcpy(pai->license,p1->pai->license);         strcpy(pai->insurance,p1->pai->insurance);         pai->contact=p1->pai->contact; 
    } 
    static void showcount() 
    { 
        cout<<"\nNo of records count="<<count<<"\n"; 
    } 
    ~person()   //Destructor 
    { 
        cout<<"\nI am in Destructor\n"; 
    } 
    void getdata(char name[20]);     inline void display(); 
}; 
void person::getdata(char name[20]) 
{ 
strcpy(this->name,name); //this pointer cout<<"\n Enter date of birth"; cin>>dob; cout<<"\n Enter blood group"; cin>>blood; cout<<"\n Enter height"; cin>>ht; cout<<"\n Enter weight"; cin>>wt; cout<<"\n Enter address"; cin>>pai->address; cout<<"\n Enter Licence number"; cin>>pai->license; cout<<"\n Enter Insurance policy number"; cin>>pai->insurance; cout<<"\n Enter Contact number"; cin>>pai->contact; count++; } 
void person::display() 
{ cout<<"\t"<<name; cout<<"\t"<<dob; cout<<"\t"<<blood; cout<<"\t"<<ht; cout<<"\t"<<wt; cout<<"\t"<<pai->address; cout<<"\t"<<pai->license; cout<<"\t"<<pai->insurance; cout<<"\t"<<pai->contact; 
} int person::count; int main() {     person *p1,*p2;     int ch;     p1=new person;      p2=new person(p1);      cout<<"\tName";     cout<<"\tDob";     cout<<"\tBlood";     cout<<"\tHt";     cout<<"\tWt";     cout<<"\tAddress";     cout<<"\tLicense";     cout<<"\tInsurance";     cout<<"\tContact"; 
    cout<<endl;cout<<"Default Constructor Value \n"; 
    p1->display();     cout<<"\n"; 
    cout<<"Copy Constructor Value \n"; 
    p2->display();     int n; 
    cout<<"\nEnter how many records you want??"; 
    cin>>n; 
    person p3[n];   //array of object     char name[20];     int x=0;     do 
    { 
        cout<<"\nWelcome to Personal database system"; 
        cout<<"\n1.Enter the record";         cout<<"\n2.Display the record";         cout<<"\n3.Exit";         cin>>ch; 
        switch(ch) 
        {             case 1: 
            { 
                    cout<<"\nEnter the Name ";                     cin>>name;                     p3[x].getdata(name); 
                    person::showcount(); // calls static function                     x++;                     break; 
            } 
            case 2: 
            { 
                    cout<<"\tName";                     cout<<"\tDob";                     cout<<"\tBlood";                     cout<<"\tHt";                     cout<<"\tWt";                     cout<<"\tAddress";                     cout<<"\tLicense";                     cout<<"\tInsurance";                     cout<<"\tContact"; 
                    for(int i=0;i<n;i++) 
                    { 
                        cout<<"\n"; 
                        p3[i].display(); //calls inline function 
                    }                     break; 
            } 
     } 
    }while(ch!=3); 
  delete p1; //dynamic memory de-allocation   delete p2;   return 0;
} 
 	 	 


OR 




Q2.Create a class template to represent a generic vector. Include following member functions: To create the vector. To modify the value of a given element. To multiply by a scalar value. To display the vector in the form (10,20,30,â€¦) 
#include<iostream.h> 
#include<conio.h> 
#include<stdlib.h> 
 
template<class T> 
class vector 
  { 
  T v[20];     int size;     public:      void create();      void display();      void multiply(); 
     void modify(); 
  }; 
  template<class T>   void vector<T>::create()   {    int i;    T value;    char ans;    size=0;    do{     cout<<"enter the index:";     cin>>i;     cout<<"enter the value:";     cin>>value;     v[i]=value; 
    size++; 
    cout<<"Do you want more elements? (y/n)!"; 
    cin>>ans; 
    }while(ans=='y' || ans=='Y'); 
   } 
  template<class T> 
  void vector<T>::display() 
  { 
   int i; 
   cout<<"Size of vector"<<size<<endl;    cout<<"Elements of vector are:"<<endl; 
   cout<<"(";    for(i=1; i<size+1;i++) 
   { 
    cout<<v[i]<<","; 
   } 
   cout<<")"; 
  } 
  template<class T> 
  void vector<T>::multiply() 
  { 
   int i;    int scalarval; 
   cout<<"enter the scalar value for multiplication:";    cin>>scalarval;    for(i=1;i<size+1;i++) 
   { 
    v[i]=v[i] * scalarval; 
   } 
  } 
  template<class T> 
  void vector<T>::modify() 
  { 
   int i; 
   int newval; 
   cout<<"Enter the index to modify:"<<endl;    cin>>i; 
   cout<<"enter the new value:";    cin>>newval; 
   v[i]=newval; 
  }   int main() 
  {    int choice;    clrscr();    vector<int>obj;    do{ 
     cout<<"\n\n---------PROGRAM FOR TEMPLATE CLASS---------"<<endl;      cout<<"\n --MAIN MENU--"<<endl;      cout<<"\n 1.CREATE:"<<endl;      cout<<"\n 2.DISPLAY:"<<endl;      cout<<"\n 3.MULTIPLY:"<<endl;      cout<<"\n 4.MODIFY:"<<endl;      cout<<"\n 5.EXIT:"<<endl;       cout<<"\n Enter your choice:"<<endl;      cin>>choice;      switch(choice){      case 1:obj.create(); 
 	break; 
    case 2:obj.display(); 
 	break; 
    case 3:obj.multiply(); 
 	break; 
    case 4:obj.modify(); 
 	break;    default: 
    cout<<"\n Invalid choice..!"<<endl; 
   } 
  }while(choice!=5); 
  getch();   return 0; } 
