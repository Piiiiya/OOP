                                                                **SLIP 4 & 15 **
 
Q1. Create a class Rational Number (fractions) with the following capabilities:a) Create a constructor that prevents a 0 denominator in a fraction, reduces or simplifies fractions that are not in reduced form and avoids negative denominators.b) Overload the addition, subtraction, multiplication and division operators for this class.c) Overload the relational and equality operators for this class.  #include<iostream.h> 
#include<conio.h> class a {     int i,n,d,sn,sd,cond; public:     void getdata() 
    { 
 	cout<<"Enter the numerator"<<endl; 
 	cin>>n; 
 	cout<<"Enter the denominator"<<endl; 
 	cin>>d; 
    } 
    void operator+(a a1) 
    { 
 	if(a1.d!=d) 
 	{ 
 	sn=(a1.n*d)+(n*a1.d); 
 	sd=(a1.d)*(d); 
 	} 
 	else 
 	{ 
 	    sn=a1.n+n;  	    sd=a1.d; 
 	} 
 	if(sn>sd) 
 	{ 
 	    cond=sd; 
 	} 
 	else if(sd>sn) 
 	{ 
 	    cond=sn; 
 	} 
    } 
    void sum() 
    { 
 	for(i=2;i<=cond;i++) 
        { 
            if(sn%i==0 && sd%i==0) 
            {                 sn=sn/i;                 sd=sd/i; 
            } 
        } 
        cout<<"Sum is "<<sn<<"/"<<sd<<endl; 
    }     a operator-(a a1)     {         a a3;          if(a1.d!=d) 
        { 
        a3.sn=(a1.n*d)-(n*a1.d);         a3.sd=(a1.d)*(d); 
        }         else 
        {             a3.sn=a1.n-n; 
            a3.sd=a1.d; 
        }         return a3; 
    }     void sub() 
    {         if(sn>sd)         {             cond=sd; 
        }         else if(sd>sn) 
        {             cond=sn; 
        } 
 	 for(i=2;i<=cond;i++) 
        { 
            if(sn%i==0 && sd%i==0) 
            {                 sn=sn/i;                 sd=sd/i; 
          } 
        } 
        cout<<"Subtraction is "<<sn<<"/"<<sd<<endl; 
    }     a operator /(a a1) 
    {         a a4;         a4.sn=a1.n*d;         a4.sd=a1.d*n;         return a4;     }     void div() 
    {          if(sn>sd)         {             cond=sd;         }         else if(sd>sn) 
        {             cond=sn; 
        }         else if(sn==sd) 
        {             sn=1;             sd=1; 
        } 
 	 for(i=2;i<=cond;i++) 
        { 
            if(sn%i==0 && sd%i==0) 
            {                 sn=sn/i;                 sd=sd/i; 
            } 
    } 
    cout<<"Division is "<<sn<<"/"<<sd<<endl; 
    } 
    a operator*(a a1) 
    { 
        a a5;         a5.sn=a1.n*n;         a5.sd=a1.d*d;         return a5; 
    } 
    void mul() 
    {         if(sn>sd)         {             cond=sd; 
        }         else if(sd>sn) 
        {             cond=sn; 
        } 
 	 for(i=2;i<=cond;i++) 
        { 
            if(sn%i==0 && sd%i==0) 
            { 
 	sn=sn/i;  	sd=sd/i; 
  } } 
cout<<"Multiplication - "<<sn<<"/"<<sd<<endl; 
    } 
 
}; void main() 
{ 
    a a1,a2,a3,a4,a5,a6;     a1.getdata();     a2.getdata(); 
 
    a2+(a1); 
    a2.sum(); 
 
    a3=a2-(a1); 
    a3.sub(); 
 
    a4=a2/(a1); 
    a4.div(); 
 
    a5=a2*(a1); 
    a5.mul(); 
 
    getch(); 
} 




OR  






Q2. Imagine a publishing company which does marketing for book and audio cassette versions. Create a class publication that stores the title (a string) and price (type float) of a publication. From this class derive two classes: book, which adds a page count (type int), and tape, which adds a playing time in minutes (type float).Write a program that instantiates the book and tape classes, allows user to enter data and displays the data members.  
#include<iostream.h> 
#include<conio.h> #include<string.h> 
class Publication{  	private:  	 	char title[50]; 
 	 	float price; 
 
 	public: 
 	void get_publication(){  	 	cout<<"\nPublication name: ";  	 	cin>>title;  	 	cout<<"Price: ";  	 	cin>>price; 
	 	} 
	 	void show_publication(){ 
 	 	 	cout<<"\nPublication name: "<<title<<endl; 
 	 	 	cout<<"Price: "<<price<<endl; 
 	 	} 
}; 
class Book : public Publication{ 
 	int page_count;  	public:  	 	void get_book(){  	 	 	cout<<"Enter page count: "; 
 	 	 	cin>>page_count; 
 	 	} 
 	 	void show_book(){ 
 	 	 	cout<<"Page count: "<<page_count<<endl; 
 	 	} 
}; 
class Tape: public Publication{  	float tape_time;  	public:  	 	void get_tape(){  	 	 	cout<<"Enter play time(in min): "; 
 	 	 	cin>>tape_time; 
 	 	} 
 	 	void show_tape(){ 
 	 	 	cout<<"Playing time(in min): "<<tape_time<<endl; 
 	 	} 
}; 
void main(){ 
 	Book b1;  	Tape t1; 
 	clrscr(); 
 	cout<<"----- Enter book detail -----"<<endl; 
 	b1.get_publication(); 
 	b1.get_book(); 
 
 	cout<<"\n----- Enter tape detail ----- "<<endl; 
 	t1.get_publication(); 
 	t1.get_tape(); 
 
 	cout<<"\n----- Book details -----"<<endl; b1.show_publication(); b1.show_book(); 
cout<<"\n----- Tape Details -----"<endl; t1.show_publication(); 
t1.show_tape(); getch(); 
} 
 
